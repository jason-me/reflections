What happens when you initialize a repository? Why do you need to do it?

	- When you initialize a repo it runs the git init and creates a .git folder which houses your commits when you make them.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	- The staging area is separate from the working area and the repository. The staging area is like a secondary working area that allows you to prepare files for transfer to the repository.

How can you use the staging area to make sure you have one commit per logical change?
	- You can use ```git add [filename]``` to add files to the staging area before commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	- Braches help when you want to brnach out with a new untested feature and keep the original code so that you can revert ot merge later

How do the diagrams help you visualize the branch structure?
	- They help to understand the branching and how some commits are separate from each other.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	- It saved changed from both branches up to that point and merged changes.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	- I am not 100% sure. 