How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was cool because the + and - lines indicated what was introduced or removed from the code. That was how I found the typo that was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will help me stay organized and will help me revert my code if there are any issues found and help me find bugs.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros: You are aware of the moment you change something and commit those changes so it is easier to go back toa previous version. 
    The cons: You have to spend more time reviewing your code before submitting to make sure you are not intriducing any errors.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    There may be dependencies among multiple files that create a larger change in a website for example, vs. a google doc is in and of itself a single entity.

How can you use the commands git log and git diff to view the history of files?

    git diff will allow me to see the changes. git log I have not read about yet, but guess it will show version history with comments on changes.

How might using version control make you more confident to make changes that
could break something?

    It is much easier to go back to a working version. 

Now that you have your workspace set up, what do you want to try using Git for?

    I would love to use it for setting up all my project files and managing them better.

    --Test Git
